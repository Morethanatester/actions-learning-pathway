name: advanced-workflow-with-secrets

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  # Cancel any other runs in progress within the same concurrency group, ensuring only the most recent workflow run is executed.

jobs:
  build:
    if: github.repository == 'morethanatester/actions-learning-pathway'
    # This job will only run if the repository matches the specified one.
    runs-on: ubuntu-latest
    env:
      MY_VARIABLE: "This is not a secret"  # This is a public environment variable

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Echo Environment Variable
        run: echo "My environment variable is $MY_VARIABLE"

      - name: Echo GitHub Secret
        run: echo "My GitHub secret is ${{ secrets.MY_GITHUB_SECRET }}"

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: npm install

      - name: Run Build Script
        run: npm run build

  test:
    if: github.repository == 'morethanatester/actions-learning-pathway'
    # This job will only run if the repository matches the specified one.
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test
        env:
          CI: true

  deploy:
    if: github.repository == 'morethanatester/actions-learning-pathway' && github.ref == 'refs/heads/main' && github.event_name == 'push'
    # Deploys only if the repository matches, the branch is 'main', and the event is a push.
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check Environment
        if: ${{ secrets.ENVIRONMENT == 'production' }}
        run: echo "ENVIRONMENT secret is set to 'production'. Proceeding with deployment."

      - name: Deploy Application
        if: ${{ secrets.ENVIRONMENT == 'production' }}
        run: |
          echo "Starting deployment..."
          echo "Copying files to production server..."
          echo "Restarting production services..."
          echo "Deployment complete!"

      - name: Deployment Skipped
        if: ${{ secrets.ENVIRONMENT != 'production' }}
        run: echo "Deployment skipped because ENVIRONMENT is not set to 'production'."
